name: Build wheels

on: [push]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cython
          python -m pip install regex
          python -m pip install future
          python -m pip install build
          python -m pip install cibuildwheel==2.12.3

      - name: Prepare for build
        run: |
          make prepare

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        # env:
        #   CIBW_SOME_OPTION: value

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install cython
          python -m pip install regex
          python -m pip install future

      - name: Prepare for build
        run: |
          make prepare

      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  publish:
    name: Publish packages to test PyPI
    runs-on: ubuntu-latest
    needs:
      - make_sdist
      - build_wheels
    steps:
      - uses: actions/setup-python@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish to test PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
